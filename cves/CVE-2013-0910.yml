CVE: CVE-2013-0910
CWE_instructions: |
  Please go to cwe.mitre.org and find the most specific, appropriate CWE entry
  that describes your vulnerability. (Tip: this may not be a good one to start
  with - spend time understanding this vulnerability before making your choice!)
CWE: CWE-287
curated_instructions: |
  If you are manually editing this file, then you are "curating" it. Set the
  entry below to "true" as soon as you start. This will enable additional
  integrity checks on this file to make sure you fill everything out properly.
  If you are a student, we cannot accept your work as finished unless curated is
  set to true.
curated: false
announced_instructions: |
  Was there a date that this vulnerability was announced to the world? You can
  find this in changelogs, blogs, bug reports, or perhaps the CVE date. A good
  source for this is Chrome's Stable Release Channel
  (https://chromereleases.googleblog.com/).
  Please enter your date in YYYY-MM-DD format.
announced: 2013-03-05 16:55:23.690000-05:00
description_instructions: |
  You can get an initial description from the CVE entry on cve.mitre.org. These
  descriptions are a fine start, but they can be kind of jargony.

  Rewrite this description in your own words. Make it interesting and easy to
  read to anyone with some programming experience. We can always pull up the NVD
  description later to get more technical.

  Try to still be specific in your description, but remove Chromium-specific
  stuff. Remove references to versions, specific filenames, and other jargon
  that outsiders to Chromium would not understand. Technology like "regular
  expressions" is fine, and security phrases like "invalid write" are fine to
  keep too.
description: "Google Chrome previously did not properly manage browser interactions\
  \ between browsers and\nrenderers. The issue occurs when plug-ins are loaded or\
  \ validated/authorized. \nAttackers can use it to bypass access restrictions with\
  \ blocked plug-ins due to \nthe exposed rendering process. The renderer is what\
  \ loads the plug-ins in the browser, and is\nexposed enough to theoretically be\
  \ compromised. If a renderer is compromised, there are no \nlonger any restricitions\
  \ on the type of plug-ins that are loaded, and an attacker could use this\nto load\
  \ in a nefarious plug-in.\n\nThis vulnerability was not a found bug, but more of\
  \ a security oversight. Someone discovered\na potential vulnerability that could\
  \ be corrected before it was ever an issue in practice.\n"
bounty_instructions: |
  If you came across any indications that a bounty was paid out for this
  vulnerability, fill it out here. Or correct it if the information already here
  was wrong. Otherwise, leave it blank.
bounty:
  date:
  amount:
  references:
  - https://chromereleases.googleblog.com/2013/03/stable-channel-update_4.html
reviews:
- 12209008
- 12114045
- 12177018
- 12210009
- 12090017
- 12086077
- 12092107
- 12315023
bugs:
- 172573
repo:
fixes_vcc_instructions: |
  Please put the commit hash in "commit" below (see my example in
  CVE-2011-3092.yml). Fixes and VCCs follow the same format.
fixes:
- :commit: 6be31d20e5c3727f136b8dfe06cd7f27ebf898bb
  :note: From the very beginning, they reference a previously discussed fix, so this
    was a probably co-located team.
- :commit: 05f51128a7145375a1661027a9c7f500821c76f5
  :note: ''
- :commit: 6a7c000f9841e3011d428ddc94b15a3fa2904325
  :note: This is a revert due to a failure after merging
- :commit: 8b75315a99bb43615b5efbf56734811bf06cd86b
  :note: ''
- :commit: 05f51128a7145375a1661027a9c7f500821c76f5
  :note: This commit is the fix to the revert, actually fixing the bug.
vccs:
- :commit: ebee9ccaecaf57a0d2b8a36a41de689eef977fea
  :note: This is just the previous commit, because there is not really a direct vulnerablity
    code introduction. When this vulnerability is introduced, it was the result of
    a thought experiment on how the code in general is unsafe. Plug-ins were handled
    this way in many locations, so there would not be one individual commit that caused
    this.
- :commit: b375c5d778c54e62bf74c5c51ce76edb3520e1dc
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 476a2703dc8248a0c87e968cbc26cb61d66c2675
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: ef3a0f2426d7d5618a7b0503b4b0260c8d616dc9
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 32d8caf6fe8dfd186d4e90f14e1a3dbdec10adba
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: b95f184dbaa1fba068d22303bbb8b18adda3cce0
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: a0421736a8a437ff97eb7deb6050f08b75810343
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 4f8a4d1bf6e24f9289f0885ce7c6fbf7b1ef9691
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 31f376cae2b8ca1d7af8104745aa34991b33a30a
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: eb415bf0e3fa41131a0f1f706e4f377d86206556
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 8aa7a419ff660e4572d7855a874ef9ffc12ce130
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 709a847ee12e1380df59db8cd3c972ec4f9c674e
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 6093d273f06f9cf16a87a69156d612f621bcee46
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: ce967866566cf4724c4029b1d21999a80a6d2a90
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 91d9f3d52a1e55a9938416b258e08d3cc445eae4
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: eaa7dd18773869211fa0e19ed84392830c0978a8
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 1bf0fb266408d260d7b01e8cfabb531937d8d953
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 0a8f3a7f5e2d8e0c479f142e9f73c9c086e7b317
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 9c1662b1bcee8857245303d037a0f133e58a6079
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 7ae9c325255a74c90c81b3f829da815ab210346e
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 79fa3363afd7282bcde23b532b95e93e46eb55f3
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: dd9a0958e0d3e43f156b83d5e0feed841312e2a9
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 27c4838940aae23f852a95fa280d8106a083b3bb
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: ef5570297e5d4e5f40089d34c0e68e7607562933
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 88509ab43312fbecef5cfc6257b3784be5c87264
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 510607c735571c67d0ceb0461b0fc797d08abbcd
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: ab563ff06585024ba472e35a2944ed787202101c
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 4befe759d0281fb6ac017ac4a1fbbad75380ccb8
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 37858e5c2f58f4b46117c65df2ab3da8a7b2e6e2
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: dfdfeb7e012ba3be899721cfd0912de08c0e1f53
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 6be31d20e5c3727f136b8dfe06cd7f27ebf898bb
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 46b69e4863d4a6ee40e5d7369656c5884430245c
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 209f2ae5d9ce448bb1bee1b554aaa4552d734af3
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: a50432d222a0e826fbd190586a6ce1c526ff95ca
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 8b71c08456fe0dc7a420aa05c609ab433d08181d
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 5ec40cfbe054961db55591c94e46979c4c4d53d7
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: c5f51194ca9eedb64337e79567759e2307053d28
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: de75c707ff326989621de4b90376e5734dcd0442
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 4da40567e156ead235e626be5ff4458b86d2bf39
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: ad23a09a27c2863e56810a849beca09cb5e2b6d8
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: b29aa74b75d57e1dc78bb151f1b7b2153d13ae3f
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 53a0afa4218c19221e2df65b664a7d42f72fc2e0
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 130757671de6d0dc4b54dd3ef11c1b9eb5f039cc
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 09911bf300f1a419907a9412154760efd0b7abc3
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 51b63f67089e9c8dbc417e5770a4286f6944aa54
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: ec8962ca7de01eb5685b32a4361dd7be8f7e6293
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 43e9066b495f2ba1fe0682503ec57fc182a1e205
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 508d103823a657b4fb94ae7f15c33dffa22ab5e7
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: cc8723746d3f6606a2aa7a022a8ead81e9126695
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 2e3b520ff4318342b027ea8aa303e5981ea9ce79
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 35daebe09bf03548ca99e58bc6ebb57d5b7a520d
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 699ea7ea271a2ba861ebdd78226fac567d24ba7e
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 0b30017682c81cf1b9f86889099f093d15b20f9c
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: df02acac84b909c194541c93eb25a3933b2b60cf
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: b6987e0e556a5f72e5e783aae0e30e883cf66f91
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 88ca491d78b19e7b681943216483710322985fc5
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: af44e7fb02b4a5d5cd5fffcf1408a065339b7535
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: cd33d288fb0817bd3b563f6df51e163f12bba816
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 4e94ab3d72e4fd1cf76be4014721985dde1b724b
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 19c15e7c18285ab00b232f436a5751a75f41af96
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: d1fe13594173c936db2383800499c3efb9ec693a
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 599490bc824bbff9968067dac44a4347122da9c2
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 97c5c596e4b649651fbef56875e125c06acb0f90
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: e67385f3093d79371b080f3042b754cf4fd0e63e
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 5b96836fc4993fd4e780ebf5a41f2a6863b0b552
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 52348b2e09e06b88e1caa2cb29843acaaaaa53cf
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: d715fb8034a11d163481f93d9473d968f9f2203e
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 8185255cc25f313327a22fdea124b98800f6105c
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 8b75315a99bb43615b5efbf56734811bf06cd86b
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: b5057db6a5baaa1f4e416bed329bef7b4c61f3d6
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 7f6f44c9e44707612415d4c85cfe9924aeacd917
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 4b571e6b3efa2f510f64de4718a1f37a9542a251
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: c8fb51f78c51ca7812cf108fd010b91496c25e85
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: a08ebeaea39acfe007d9ee9b25b28efd04011e5a
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 3a5180ae725c862c95fb782885935210b5e47b11
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: ad50def5e1165d0cc74b98f988bbd5962587d9f4
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: c2295f7afea05f5b15fb4ab5cb5572e0a8d0401a
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: a436d92d5121ebfc9996682cfed4c3ad33313138
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: dfba8766fbe2b0d0ac7e538f18aaf6b92aa68c1e
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: d259a8ecab95cd657b9c7d413e8bfa3c86d0d4cb
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 6ffd22c7dc3c6dc88f48a1f8fe2b4726dbb12f49
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: c5a5c084acc5c25f14920e559f69dd6ae3267fa5
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: d33e7cc3d6195681decd0787db8131eb614e7594
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 11e1c184da89ce57eb9b47cc00cf052d660556c6
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 8ecad5ed4a616e8c5023561c224e81e09a37d79a
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: d111e93688a8531eb6f3f48592dfbcb88a9a4fee
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: 5626b089581b55c06b72b9bec61f95f7e1337e4b
  :note: This VCC was automatically discovered by the archeogit tool
- :commit: d1b725d0dcb7c4a43b82a2d5aadbed39605f25cd
  :note: This VCC was automatically discovered by the archeogit tool
upvotes_instructions: |
  For the first round, ignore this upvotes number.

  For the second round of reviewing, you will be giving a certain amount of
  upvotes to each vulnerability you see. Your peers will tell you how
  interesting they think this vulnerability is, and you'll add that to the
  upvotes score on your branch.
upvotes:
unit_tested:
  question: |
    Were automated unit tests involved in this vulnerability?
    Was the original code unit tested, or not unit tested? Did the fix involve
    improving the automated tests?

    For the "code" answer below, look not only at the fix but the surrounding
    code near the fix and determine if and was there were unit tests involved
    for this module.

    For the "fix" answer below, check if the fix for the vulnerability involves
    adding or improving an automated test to ensure this doesn't happen again.
  answer: "Due to the nature of this vulnerability, it did not originally have unit\
    \ tests, but it\ndoes have browser tests that were put in place to ensure it works\
    \ properly. They did\nadd one more test to ensure that certain plug-ins were unable\
    \ to be loaded. Because this \nvulnerability was not one specific issue but more\
    \ of a previous oversight\nthey added in regression tests and unit tests to ensure\
    \ the new functionality was \nworking appropriately.\n"
  code: true
  fix: true
discovered:
  question: |
    How was this vulnerability discovered?

    Go to the bug report and read the conversation to find out how this was
    originally found. Answer in longform below in "answer", fill in the date in
    YYYY-MM-DD, and then determine if the vulnerability was found by a Google
    employee (you can tell from their email address). If it's clear that the
    vulenrability was discovered by a contest, fill in the name there.

    The "automated" flag can be true, false, or nil.
    The "google" flag can be true, false, or nil.

    If there is no evidence as to how this vulnerability was found, then you may
    leave the entries blank except for "answer". Write down where you looked in "answer".
  answer: "Some person with a gmail account, but not a google employee account, was\
    \ experimenting\nwith the idea of \"breaking out of the Chrome sandbox.\" This\
    \ goal of this sandbox, according \nto the chromium website, is to prevent code\
    \ from making persistent changes to the computer and \n\"to provide hard guarantees\
    \ about what ultimately a piece of code can or cannot do no matter \nwhat its\
    \ inputs are.\" \nThere is no further information about the person that found\
    \ this vulnerability other than their \ngmail account without any personal information.\
    \ They claim to have experience with Java and \nthe security(or lack thereof)\
    \ involved with the language. They found a concern with the process \nbetween\
    \ renderers and authorized plug-ins. This vulnerability was merely\nreasoned out\
    \ from curiosity and past experience.\n"
  date: 2013-01-28
  automated: false
  google: false
  contest: false
subsystem:
  question: |
    What subsystems was the mistake in?

    Look at the path of the source code files code that were fixed to get
    directory names. Look at comments in the code. Look at the bug reports how
    the bug report was tagged. Examples: "clipboard", "gpu", "ssl", "speech", "renderer"
  answer: "Between the code review and the bug reports, it appeared to all be located\
    \ in the browser folder \nwith the code fixes in the plug-in folder.\n"
  name: plug-ins
interesting_commits:
  question: |
    Are there any interesting commits between your VCC(s) and fix(es)?

    Write a brief (under 100 words) description of why you think this commit was
    interesting in light of the lessons learned from this vulnerability. Any
    emerging themes?

    If there are no interesting commits, demonstrate that you completed this section by explaining what happened between the VCCs and the fix.
  answer:
  commits:
  - commit: 6be31d20e5c3727f136b8dfe06cd7f27ebf898bb
    note: The author of the fix rewrote this code multiple times prior to submitting
      due to concerns about layering violations. It was interesting to see someone
      dedicate a large number of time to the first commit in the set of commits.
major_events:
  question: |
    Please record any major events you found in the history of this
    vulnerability. Was the code rewritten at some point? Was a nearby subsystem
    changed? Did the team change?

    The event doesn't need to be directly related to this vulnerability, rather,
    we want to capture what the development team was dealing with at the time.
  answer:
  events:
  - name: Initial creation of the mentioned fix
    date: 2013-01-31
  - name: Fix needed to be reverted due to Windows issue
    date: 2013-02-01
  - name: After it was approved, a different developer mentioned issues with naming
      conventions
    date: 2013-02-04
  - name: Fix passed with renaming
    date: 2013-02-05
lessons:
  question: |
    Are there any common lessons we have learned from class that apply to this
    vulnerability? In other words, could this vulnerability serve as an example
    of one of those lessons?

    Leave "applies" blank or put false if you did not see that lesson (you do
    not need to put a reason). Put "true" if you feel the lesson applies and put
    a quick explanation of how it applies.

    Don't feel the need to claim that ALL of these apply, but it's pretty likely
    that one or two of them apply.

    If you think of another lesson we covered in class that applies here, feel
    free to give it a small name and add one in the same format as these.
  defense_in_depth:
    applies: true
    note: The vulnerability is concerned with the step after a renderer is theoretically
      compromised and preventing it from taking advantage of a user.
  least_privilege:
    applies: true
    note: Unless both a plug-in and Java have been approved, they will not allow a
      compromised renderer to load it in.
  frameworks_are_optional:
    applies: false
    note:
  native_wrappers:
    applies: false
    note:
  distrust_input:
    applies: false
    note:
  security_by_obscurity:
    applies: false
    note:
  serial_killer:
    applies: false
    note:
  environment_variables:
    applies: false
    note:
  secure_by_default:
    applies: true
    note: Originally, renderers were trusted by default and could load any plug-ins.
      After the fix, they were inherently untrusted and must have other checks involved.
  yagni:
    applies: false
    note:
  complex_inputs:
    applies: false
    note:
  sandbox:
    applies: true
    note: "This specific vulnerability affects the level of trust assosciated with\
      \ the sandbox \nbecause it allows a corrupted renderer to load any plug-ins\
      \ that a nefarious user wants \nit to load. This breaks out of the trust boundary\
      \ set by the sandbox, and allows code to\nbe executed with unpredictable consequences.\n"
mistakes:
  question: |
    In your opinion, after all of this research, what mistakes were made that
    led to this vulnerability? Coding mistakes? Design mistakes?
    Maintainability? Requirements? Miscommunications?

    Look at the CWE entry for this vulnerability and examine the mitigations
    they have written there. Are they doing those? Does the fix look proper?

    Use those questions to inspire your answer. Don't feel obligated to answer
    every one. Write a thoughtful entry here that those ing the software
    engineering industry would find interesting.
  answer: "All in all, I don't think that there were that many mistakes that were\
    \ made that\nwere avoidable. Someone with more experience with Java and plug-ins\
    \ noticed a section\nof code that could be improved, and google responded accordingly.\
    \ If any mistakes were\nmade, it would be in the design phase. It also might be\
    \ able to be considered a Maintainability\nissue, because as technologies evolved,\
    \ they did not stay upgrade this feature accordingly.\n\nAs far as the mitigations\
    \ go, the only one mentioned on the cwe page is to use an authentication\nframework\
    \ and library. However, this is not entirely relevant because we are not concerned\
    \ with\nuser authentication, but authentication of a renderer. This is a more\
    \ unique problem than one that \ncan be solved with a default library. \n\nThe\
    \ fix looks like a pretty good solution for a problem that is not very common.\n"
